from aiogram import Bot, Dispatcher, executor, types
import re
import logging
from db import BotDB
from aiogram import Bot, Dispatcher
import config

# Configure logging
logging.basicConfig(level=logging.INFO)

bot = Bot(token=config.BOT_TOKEN, parse_mode="HTML")
dp = Dispatcher(bot)

BotDB = BotDB('DeadLine.db')


from bot import BotDB

@dp.message_handler(commands="start")
async def start(message: types.Message):
    if(not BotDB.user_exists(message.from_user.id)):
        BotDB.add_user(message.from_user.id)

    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text="–ù–∞—á–∞—Ç—å")
    keyboard.add(button_1)
    button_2 = "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"
    keyboard.add(button_2)
    button_3 = "–í—Å–µ –∑–∞–¥–∞–Ω–∏—è"
    keyboard.add(button_3)
    await message.bot.send_message(message.from_user.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=keyboard)

@dp.message_handler(lambda message: message.text =="–ù–∞—á–∞—Ç—å")
async def start(message: types.Message):
    if (not BotDB.user_exists(message.from_user.id)):
        BotDB.add_user(message.from_user.id)

    keyboard = types.ReplyKeyboardMarkup()
    button_1 = types.KeyboardButton(text="–ù–∞—á–∞—Ç—å")
    keyboard.add(button_1)
    button_2 = "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"
    keyboard.add(button_2)
    button_3 = "–í—Å–µ –∑–∞–¥–∞–Ω–∏—è"
    keyboard.add(button_3)
    await message.bot.send_message(message.from_user.id, "–≠—Ç–æ –î–µ–¥–ª–∞–π–Ω–µ—Ä –ë–æ—Ç! –¢—É—Ç –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å–∞—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã!", reply_markup=keyboard)



@dp.message_handler(lambda message: message.text =="–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")
async def start(message: types.Message):
    await message.bot.send_message(message.from_user.id, "–î–µ–¥–ª–∞–π–Ω–µ—Ä –∏–º–µ–µ—Ç –∫–æ–º–∞–Ω–¥—ã /add - –¥–æ–±–∞–≤–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω , /delete - —É–¥–∞–ª–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω, –∞ —Ç–∞–∫ –∂–µ –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")


@dp.message_handler(commands=("add", "delete", "s", "e"), commands_prefix="/!")
async def start(message: types.Message):
    cmd_variants = (('/add', '/a', '!add', '!a'), ('/delete', '/d', '!delete', '!d'))
    operation = '-' if message.text.startswith(cmd_variants[0]) else '+'

    value = message.text
    for i in cmd_variants:
        for j in i:
            value = value.replace(j, '').strip()

    if (len(value)):
        x =value
        if (len(x)):

            if (operation == '-'):
                await message.reply("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ  <u><b> - –¥–∞–Ω–Ω–æ–≥–æ –¥–µ–¥–ª–∞–π–Ω–∞</b></u> —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!")
                BotDB.add_record(message.from_user.id, operation, value)
            else:
                BotDB.delete_record(message.from_user.id, operation, value)
                await message.reply( "‚ûñ –£–¥–∞–ª–µ–Ω–∏–µ   <u><b> - –¥–∞–Ω–Ω–æ–≥–æ –¥–µ–¥–ª–∞–π–Ω–∞</b></u>  —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!")


        else:
            await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–µ–¥–ª–∞–π–Ω!")
    else:
        await message.reply("–ù–µ –≤–≤–µ–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–¥–ª–∞–π–Ω–µ!")


@dp.message_handler(lambda message: message.text =="–í—Å–µ –∑–∞–¥–∞–Ω–∏—è")
async def start(message: types.Message):

    records = BotDB.get_records(message.from_user.id)

    if (len(records)):
        answer = f"üïò –í—Å–µ –¥–µ–¥–ª–∞–π–Ω—ã \n"

        for r in records:
            answer +=  ("‚ûñ –û—Å—Ç–∞–ª–æ—Å—å  " )+ r[0]+"\n"
        await message.reply(answer)
    else:
        await message.reply("–ó–∞–ø–∏—Å–µ–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!")




if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
